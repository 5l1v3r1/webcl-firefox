/*
 * This file is part of WebCL â€“ Web Computing Language.
 *
 * This Source Code Form is subject to the terms of the
 * Mozilla Public License, v. 2.0. If a copy of the MPL
 * was not distributed with this file, You can obtain
 * one at http://mozilla.org/MPL/2.0/.
 *
 * The Original Contributor of this Source Code Form is
 * Nokia Research Center Tampere (http://webcl.nokiaresearch.com).
 *
 */

#include "nsISupports.idl"
#include "nsIVariant.idl"
#include "nsIDOMWindow.idl"
#include "interfaces/webcl_types.idl"

interface IWebCLContext;

[scriptable, uuid(8d1a0db2-94af-4333-9b55-9c516a1dbbea)]
interface IWebCL : nsISupports
{
  void init (in nsIDOMWindow domWindow);

  nsIVariant getPlatforms ();

  IWebCLContext createContext ([optional] in nsIVariant properties);

  nsIVariant getSupportedExtensions ();

  CLboolean enableExtension (in string extensionName);

  void waitForEvents (in nsIVariant eventList, [optional] in nsIVariant whenFinished);

  void releaseAll ();


  const long SUCCESS = 0;
  const long DEVICE_NOT_FOUND = -1;
  const long DEVICE_NOT_AVAILABLE = -2;
  const long COMPILER_NOT_AVAILABLE = -3;
  const long MEM_OBJECT_ALLOCATION_FAILURE = -4;
  const long OUT_OF_RESOURCES = -5;
  const long OUT_OF_HOST_MEMORY = -6;
  const long PROFILING_INFO_NOT_AVAILABLE = -7;
  const long MEM_COPY_OVERLAP = -8;
  const long IMAGE_FORMAT_MISMATCH = -9;
  const long IMAGE_FORMAT_NOT_SUPPORTED = -10;
  const long BUILD_PROGRAM_FAILURE = -11;
  const long MAP_FAILURE = -12;
  const long MISALIGNED_SUB_BUFFER_OFFSET = -13;
  const long EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST = -14;
  const long INVALID_VALUE = -30;
  const long INVALID_DEVICE_TYPE = -31;
  const long INVALID_PLATFORM = -32;
  const long INVALID_DEVICE = -33;
  const long INVALID_CONTEXT = -34;
  const long INVALID_QUEUE_PROPERTIES = -35;
  const long INVALID_COMMAND_QUEUE = -36;
  const long INVALID_HOST_PTR = -37;
  const long INVALID_MEM_OBJECT = -38;
  const long INVALID_IMAGE_FORMAT_DESCRIPTOR = -39;
  const long INVALID_IMAGE_SIZE = -40;
  const long INVALID_SAMPLER = -41;
  const long INVALID_BINARY = -42;
  const long INVALID_BUILD_OPTIONS = -43;
  const long INVALID_PROGRAM = -44;
  const long INVALID_PROGRAM_EXECUTABLE = -45;
  const long INVALID_KERNEL_NAME = -46;
  const long INVALID_KERNEL_DEFINITION = -47;
  const long INVALID_KERNEL = -48;
  const long INVALID_ARG_INDEX = -49;
  const long INVALID_ARG_VALUE = -50;
  const long INVALID_ARG_SIZE = -51;
  const long INVALID_KERNEL_ARGS = -52;
  const long INVALID_WORK_DIMENSION = -53;
  const long INVALID_WORK_GROUP_SIZE = -54;
  const long INVALID_WORK_ITEM_SIZE = -55;
  const long INVALID_GLOBAL_OFFSET = -56;
  const long INVALID_EVENT_WAIT_LIST = -57;
  const long INVALID_EVENT = -58;
  const long INVALID_OPERATION = -59;
  const long INVALID_GL_OBJECT = -60;
  const long INVALID_BUFFER_SIZE = -61;
  const long INVALID_MIP_LEVEL = -62;
  const long INVALID_GLOBAL_WORK_SIZE = -63;
  const long INVALID_PROPERTY = -64;
  const long VERSION_1_0 = 1;
  const long VERSION_1_1 = 1;
  const long FALSE = 0;
  const long TRUE = 1;
  const long PLATFORM_PROFILE = 0x0900;
  const long PLATFORM_VERSION = 0x0901;
  const long PLATFORM_NAME = 0x0902;
  const long PLATFORM_VENDOR = 0x0903;
  const long PLATFORM_EXTENSIONS = 0x0904;
  const long DEVICE_TYPE_DEFAULT = (1<<0);
  const long DEVICE_TYPE_CPU = (1<<1);
  const long DEVICE_TYPE_GPU = (1<<2);
  const long DEVICE_TYPE_ACCELERATOR = (1<<3);
  const unsigned long DEVICE_TYPE_ALL = 0xFFFFFFFF;
  const long DEVICE_TYPE = 0x1000;
  const long DEVICE_VENDOR_ID = 0x1001;
  const long DEVICE_MAX_COMPUTE_UNITS = 0x1002;
  const long DEVICE_MAX_WORK_ITEM_DIMENSIONS = 0x1003;
  const long DEVICE_MAX_WORK_GROUP_SIZE = 0x1004;
  const long DEVICE_MAX_WORK_ITEM_SIZES = 0x1005;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_CHAR = 0x1006;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_SHORT = 0x1007;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_INT = 0x1008;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_LONG = 0x1009;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT = 0x100A;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE = 0x100B;
  const long DEVICE_MAX_CLOCK_FREQUENCY = 0x100C;
  const long DEVICE_ADDRESS_BITS = 0x100D;
  const long DEVICE_MAX_READ_IMAGE_ARGS = 0x100E;
  const long DEVICE_MAX_WRITE_IMAGE_ARGS = 0x100F;
  const long DEVICE_MAX_MEM_ALLOC_SIZE = 0x1010;
  const long DEVICE_IMAGE2D_MAX_WIDTH = 0x1011;
  const long DEVICE_IMAGE2D_MAX_HEIGHT = 0x1012;
  const long DEVICE_IMAGE3D_MAX_WIDTH = 0x1013;
  const long DEVICE_IMAGE3D_MAX_HEIGHT = 0x1014;
  const long DEVICE_IMAGE3D_MAX_DEPTH = 0x1015;
  const long DEVICE_IMAGE_SUPPORT = 0x1016;
  const long DEVICE_MAX_PARAMETER_SIZE = 0x1017;
  const long DEVICE_MAX_SAMPLERS = 0x1018;
  const long DEVICE_MEM_BASE_ADDR_ALIGN = 0x1019;
  const long DEVICE_SINGLE_FP_CONFIG = 0x101B;
  const long DEVICE_GLOBAL_MEM_CACHE_TYPE = 0x101C;
  const long DEVICE_GLOBAL_MEM_CACHELINE_SIZE = 0x101D;
  const long DEVICE_GLOBAL_MEM_CACHE_SIZE = 0x101E;
  const long DEVICE_GLOBAL_MEM_SIZE = 0x101F;
  const long DEVICE_MAX_CONSTANT_BUFFER_SIZE = 0x1020;
  const long DEVICE_MAX_CONSTANT_ARGS = 0x1021;
  const long DEVICE_LOCAL_MEM_TYPE = 0x1022;
  const long DEVICE_LOCAL_MEM_SIZE = 0x1023;
  const long DEVICE_ERROR_CORRECTION_SUPPORT = 0x1024;
  const long DEVICE_PROFILING_TIMER_RESOLUTION = 0x1025;
  const long DEVICE_ENDIAN_LITTLE = 0x1026;
  const long DEVICE_AVAILABLE = 0x1027;
  const long DEVICE_COMPILER_AVAILABLE = 0x1028;
  const long DEVICE_EXECUTION_CAPABILITIES = 0x1029;
  const long DEVICE_QUEUE_PROPERTIES = 0x102A;
  const long DEVICE_NAME = 0x102B;
  const long DEVICE_VENDOR = 0x102C;
  const long DRIVER_VERSION = 0x102D;
  const long DEVICE_PROFILE = 0x102E;
  const long DEVICE_VERSION = 0x102F;
  const long DEVICE_EXTENSIONS = 0x1030;
  const long DEVICE_PLATFORM = 0x1031;
  const long DEVICE_DOUBLE_FP_CONFIG = 0x1032;
  const long DEVICE_HALF_FP_CONFIG = 0x1033;
  const long DEVICE_PREFERRED_VECTOR_WIDTH_HALF = 0x1034;
  const long DEVICE_HOST_UNIFIED_MEMORY = 0x1035;
  const long DEVICE_NATIVE_VECTOR_WIDTH_CHAR = 0x1036;
  const long DEVICE_NATIVE_VECTOR_WIDTH_SHORT = 0x1037;
  const long DEVICE_NATIVE_VECTOR_WIDTH_INT = 0x1038;
  const long DEVICE_NATIVE_VECTOR_WIDTH_LONG = 0x1039;
  const long DEVICE_NATIVE_VECTOR_WIDTH_FLOAT = 0x103A;
  const long DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE = 0x103B;
  const long DEVICE_NATIVE_VECTOR_WIDTH_HALF = 0x103C;
  const long DEVICE_OPENCL_C_VERSION = 0x103D;
  const long FP_DENORM = (1<<0);
  const long FP_INF_NAN = (1<<1);
  const long FP_ROUND_TO_NEAREST = (1<<2);
  const long FP_ROUND_TO_ZERO = (1<<3);
  const long FP_ROUND_TO_INF = (1<<4);
  const long FP_FMA = (1<<5);
  const long FP_SOFT_FLOAT = (1<<6);
  const long NONE = 0x0;
  const long READ_ONLY_CACHE = 0x1;
  const long READ_WRITE_CACHE = 0x2;
  const long LOCAL = 0x1;
  const long GLOBAL = 0x2;
  const long EXEC_KERNEL = (1<<0);
  const long EXEC_NATIVE_KERNEL = (1<<1);
  const long QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE = (1<<0);
  const long QUEUE_PROFILING_ENABLE = (1<<1);
  const long CONTEXT_REFERENCE_COUNT = 0x1080;
  const long CONTEXT_DEVICES = 0x1081;
  const long CONTEXT_PROPERTIES = 0x1082;
  const long CONTEXT_NUM_DEVICES = 0x1083;
  const long CONTEXT_PLATFORM = 0x1084;
  const long QUEUE_CONTEXT = 0x1090;
  const long QUEUE_DEVICE = 0x1091;
  const long QUEUE_REFERENCE_COUNT = 0x1092;
  const long QUEUE_PROPERTIES = 0x1093;
  const long MEM_READ_WRITE = (1<<0);
  const long MEM_WRITE_ONLY = (1<<1);
  const long MEM_READ_ONLY = (1<<2);
  const long MEM_USE_HOST_PTR = (1<<3);
  const long MEM_ALLOC_HOST_PTR = (1<<4);
  const long MEM_COPY_HOST_PTR = (1<<5);
  const long R = 0x10B0;
  const long A = 0x10B1;
  const long RG = 0x10B2;
  const long RA = 0x10B3;
  const long RGB = 0x10B4;
  const long RGBA = 0x10B5;
  const long BGRA = 0x10B6;
  const long ARGB = 0x10B7;
  const long INTENSITY = 0x10B8;
  const long LUMINANCE = 0x10B9;
  const long Rx = 0x10BA;
  const long RGx = 0x10BB;
  const long RGBx = 0x10BC;
  const long SNORM_INT8 = 0x10D0;
  const long SNORM_INT16 = 0x10D1;
  const long UNORM_INT8 = 0x10D2;
  const long UNORM_INT16 = 0x10D3;
  const long UNORM_SHORT_565 = 0x10D4;
  const long UNORM_SHORT_555 = 0x10D5;
  const long UNORM_INT_101010 = 0x10D6;
  const long SIGNED_INT8 = 0x10D7;
  const long SIGNED_INT16 = 0x10D8;
  const long SIGNED_INT32 = 0x10D9;
  const long UNSIGNED_INT8 = 0x10DA;
  const long UNSIGNED_INT16 = 0x10DB;
  const long UNSIGNED_INT32 = 0x10DC;
  const long HALF_FLOAT = 0x10DD;
  const long FLOAT = 0x10DE;
  const long MEM_OBJECT_BUFFER = 0x10F0;
  const long MEM_OBJECT_IMAGE2D = 0x10F1;
  const long MEM_OBJECT_IMAGE3D = 0x10F2;
  const long MEM_TYPE = 0x1100;
  const long MEM_FLAGS = 0x1101;
  const long MEM_SIZE = 0x1102;
  const long MEM_HOST_PTR = 0x1103;
  const long MEM_MAP_COUNT = 0x1104;
  const long MEM_REFERENCE_COUNT = 0x1105;
  const long MEM_CONTEXT = 0x1106;
  const long MEM_ASSOCIATED_MEMOBJECT = 0x1107;
  const long MEM_OFFSET = 0x1108;
  const long IMAGE_FORMAT = 0x1110;
  const long IMAGE_ELEMENT_SIZE = 0x1111;
  const long IMAGE_ROW_PITCH = 0x1112;
  const long IMAGE_SLICE_PITCH = 0x1113;
  const long IMAGE_WIDTH = 0x1114;
  const long IMAGE_HEIGHT = 0x1115;
  const long IMAGE_DEPTH = 0x1116;
  const long ADDRESS_NONE = 0x1130;
  const long ADDRESS_CLAMP_TO_EDGE = 0x1131;
  const long ADDRESS_CLAMP = 0x1132;
  const long ADDRESS_REPEAT = 0x1133;
  const long ADDRESS_MIRRORED_REPEAT = 0x1134;
  const long FILTER_NEAREST = 0x1140;
  const long FILTER_LINEAR = 0x1141;
  const long SAMPLER_REFERENCE_COUNT = 0x1150;
  const long SAMPLER_CONTEXT = 0x1151;
  const long SAMPLER_NORMALIZED_COORDS = 0x1152;
  const long SAMPLER_ADDRESSING_MODE = 0x1153;
  const long SAMPLER_FILTER_MODE = 0x1154;
  const long MAP_READ = (1<<0);
  const long MAP_WRITE = (1<<1);
  const long PROGRAM_REFERENCE_COUNT = 0x1160;
  const long PROGRAM_CONTEXT = 0x1161;
  const long PROGRAM_NUM_DEVICES = 0x1162;
  const long PROGRAM_DEVICES = 0x1163;
  const long PROGRAM_SOURCE = 0x1164;
  const long PROGRAM_BINARY_SIZES = 0x1165;
  const long PROGRAM_BINARIES = 0x1166;
  const long PROGRAM_BUILD_STATUS = 0x1181;
  const long PROGRAM_BUILD_OPTIONS = 0x1182;
  const long PROGRAM_BUILD_LOG = 0x1183;
  const long BUILD_SUCCESS = 0;
  const long BUILD_NONE = -1;
  const long BUILD_ERROR = -2;
  const long BUILD_IN_PROGRESS = -3;
  const long KERNEL_FUNCTION_NAME = 0x1190;
  const long KERNEL_NUM_ARGS = 0x1191;
  const long KERNEL_REFERENCE_COUNT = 0x1192;
  const long KERNEL_CONTEXT = 0x1193;
  const long KERNEL_PROGRAM = 0x1194;
  const long KERNEL_WORK_GROUP_SIZE = 0x11B0;
  const long KERNEL_COMPILE_WORK_GROUP_SIZE = 0x11B1;
  const long KERNEL_LOCAL_MEM_SIZE = 0x11B2;
  const long KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE = 0x11B3;
  const long KERNEL_PRIVATE_MEM_SIZE = 0x11B4;
  const long EVENT_COMMAND_QUEUE = 0x11D0;
  const long EVENT_COMMAND_TYPE = 0x11D1;
  const long EVENT_REFERENCE_COUNT = 0x11D2;
  const long EVENT_COMMAND_EXECUTION_STATUS = 0x11D3;
  const long EVENT_CONTEXT = 0x11D4;
  const long COMMAND_NDRANGE_KERNEL = 0x11F0;
  const long COMMAND_TASK = 0x11F1;
  const long COMMAND_NATIVE_KERNEL = 0x11F2;
  const long COMMAND_READ_BUFFER = 0x11F3;
  const long COMMAND_WRITE_BUFFER = 0x11F4;
  const long COMMAND_COPY_BUFFER = 0x11F5;
  const long COMMAND_READ_IMAGE = 0x11F6;
  const long COMMAND_WRITE_IMAGE = 0x11F7;
  const long COMMAND_COPY_IMAGE = 0x11F8;
  const long COMMAND_COPY_IMAGE_TO_BUFFER = 0x11F9;
  const long COMMAND_COPY_BUFFER_TO_IMAGE = 0x11FA;
  const long COMMAND_MAP_BUFFER = 0x11FB;
  const long COMMAND_MAP_IMAGE = 0x11FC;
  const long COMMAND_UNMAP_MEM_OBJECT = 0x11FD;
  const long COMMAND_MARKER = 0x11FE;
  const long COMMAND_ACQUIRE_GL_OBJECTS = 0x11FF;
  const long COMMAND_RELEASE_GL_OBJECTS = 0x1200;
  const long COMMAND_READ_BUFFER_RECT = 0x1201;
  const long COMMAND_WRITE_BUFFER_RECT = 0x1202;
  const long COMMAND_COPY_BUFFER_RECT = 0x1203;
  const long COMMAND_USER = 0x1204;
  const long COMPLETE = 0x0;
  const long RUNNING = 0x1;
  const long SUBMITTED = 0x2;
  const long QUEUED = 0x3;
  const long BUFFER_CREATE_TYPE_REGION = 0x1220;
  const long PROFILING_COMMAND_QUEUED = 0x1280;
  const long PROFILING_COMMAND_SUBMIT = 0x1281;
  const long PROFILING_COMMAND_START = 0x1282;
  const long PROFILING_COMMAND_END = 0x1283;
};
