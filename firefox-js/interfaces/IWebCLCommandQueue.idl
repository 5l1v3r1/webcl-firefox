/*
 * This file is part of WebCL â€“ Web Computing Language.
 *
 * This Source Code Form is subject to the terms of the
 * Mozilla Public License, v. 2.0. If a copy of the MPL
 * was not distributed with this file, You can obtain
 * one at http://mozilla.org/MPL/2.0/.
 *
 * The Original Contributor of this Source Code Form is
 * Nokia Research Center Tampere (http://webcl.nokiaresearch.com).
 *
 */

#include "nsISupports.idl"
#include "nsIVariant.idl"
#include "interfaces/webcl_types.idl"

#include "interfaces/IWebCLBuffer.idl"
#include "interfaces/IWebCLImage.idl"
#include "interfaces/IWebCLEvent.idl"
#include "interfaces/IWebCLKernel.idl"

typedef nsIVariant IWebCLEvent_List;
typedef nsIVariant ArrayBufferView;

[scriptable, uuid(751b06c0-cac3-4123-87ae-2b8c22832d52)]
interface IWebCLCommandQueue : nsISupports
{
  string getExternalIdentity ();
  void enqueueCopyBuffer(
                    in nsIVariant                            srcBuffer,
                    in nsIVariant                            dstBuffer,
                    in nsIVariant                            srcOffset,
                    in nsIVariant                            dstOffset,
                    in nsIVariant                            numBytes,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueCopyBufferRect(
                    in nsIVariant                            srcBuffer,
                    in nsIVariant                            dstBuffer,
                    in nsIVariant                            srcOrigin,
                    in nsIVariant                            dstOrigin,
                    in nsIVariant                            region,
                    in nsIVariant                            srcRowPitch,
                    in nsIVariant                            srcSlicePitch,
                    in nsIVariant                            dstRowPitch,
                    in nsIVariant                            dstSlicePitch,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueCopyImage(
                    in nsIVariant                            srcImage,
                    in nsIVariant                            dstImage,
                    in nsIVariant                            srcOrigin,
                    in nsIVariant                            dstOrigin,
                    in nsIVariant                            region,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueCopyImageToBuffer(
                    in nsIVariant                            srcImage,
                    in nsIVariant                            dstBuffer,
                    in nsIVariant                            srcOrigin,
                    in nsIVariant                            srcRegion,
                    in nsIVariant                            dstOffset,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueCopyBufferToImage(
                    in nsIVariant                            srcBuffer,
                    in nsIVariant                            dstImage,
                    in nsIVariant                            srcOffset,
                    in nsIVariant                            dstOrigin,
                    in nsIVariant                            dstRegion,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueReadBuffer(
                    in nsIVariant                            buffer,
                    in nsIVariant                            blockingRead,
                    in nsIVariant                            bufferOffset,
                    in nsIVariant                            numBytes,
                    in ArrayBufferView                       hostPtr,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueReadBufferRect(
                    in nsIVariant                            buffer,
                    in nsIVariant                            blockingRead,
                    in nsIVariant                            bufferOrigin,
                    in nsIVariant                            hostOrigin,
                    in nsIVariant                            region,
                    in nsIVariant                            bufferRowPitch,
                    in nsIVariant                            bufferSlicePitch,
                    in nsIVariant                            hostRowPitch,
                    in nsIVariant                            hostSlicePitch,
                    in ArrayBufferView                       hostPtr,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueReadImage(  // TODO: Copy-paste IDL and JS from this function to all others!
                    in nsIVariant                            image,          // IWebCLImage
                    in nsIVariant                            blockingRead,   // CLboolean
                    in nsIVariant                            origin,         // CLuint[2]
                    in nsIVariant                            region,         // CLuint[2]
                    in nsIVariant                            hostRowPitch,   // CLuint
                    in ArrayBufferView                       hostPtr,        // not validated yet
                    [optional] in IWebCLEvent_List           eventWaitList,  // not validated yet
                    [optional] in IWebCLEvent                event);         // not validated yet

  void enqueueWriteBuffer(
                    in nsIVariant                            buffer,
                    in nsIVariant                            blockingWrite,
                    in nsIVariant                            bufferOffset,
                    in nsIVariant                            numBytes,
                    in ArrayBufferView                       hostPtr,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueWriteBufferRect(
                    in nsIVariant                            buffer,
                    in nsIVariant                             blockingWrite,
                    in nsIVariant                            bufferOrigin,
                    in nsIVariant                            hostOrigin,
                    in nsIVariant                            region,
                    in nsIVariant                            bufferRowPitch,
                    in nsIVariant                            bufferSlicePitch,
                    in nsIVariant                            hostRowPitch,
                    in nsIVariant                            hostSlicePitch,
                    in ArrayBufferView                       hostPtr,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueWriteImage(
                    in nsIVariant                            image,
                    in nsIVariant                            blockingWrite,
                    in nsIVariant                            origin,
                    in nsIVariant                            region,
                    in nsIVariant                            hostRowPitch,
                    in ArrayBufferView                       hostPtr,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueNDRangeKernel(
                    in IWebCLKernel                          kernel,
                    in nsIVariant                            workDim,
                    in nsIVariant                            globalWorkOffset,
                    in nsIVariant                            globalWorkSize,
                    [optional] in nsIVariant                 localWorkSize,
                    [optional] in IWebCLEvent_List           eventWaitList,
                    [optional] in IWebCLEvent                event);

  void enqueueMarker (
                    in IWebCLEvent                           event);

  void enqueueBarrier();

  void enqueueWaitForEvents (
                    in IWebCLEvent_List                      eventWaitList);

  void finish ();

  void flush ();

  nsIVariant getInfo (
                    [optional] in CLenum                     name);

  void release();
};
